name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_bbs2
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e .
        uv pip install pytest pytest-asyncio black ruff mypy ipython httpx
    
    - name: Run linting
      working-directory: ./backend
      run: |
        source .venv/bin/activate
        ruff check .
        black --check .
    
    - name: Run type checking
      working-directory: ./backend
      run: |
        source .venv/bin/activate
        mypy .
    
    - name: Run tests
      working-directory: ./backend
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/test_bbs2
        OPENAI_API_KEY: sk-test
        COLLECTION_NAME: test_collection
      run: |
        source .venv/bin/activate
        pytest -v